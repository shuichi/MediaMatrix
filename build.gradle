plugins {
    id 'java' 
    id 'application'
    id 'org.beryx.runtime' version '1.13.0'
}

group 'mediamatrix'
version '2.9.10'

application {
    mainClass = 'mediamatrix.MediaMatrix'
}

repositories {
    mavenCentral()
    maven { 
        url 'https://netbeans.apidesign.org/maven2/'
    }
}

dependencies {
    implementation 'org.jfree:jfreechart:1.5.4'
    implementation 'com.formdev:flatlaf:3.2.5'
    implementation 'org.apache.commons:commons-jexl3:3.0'
    implementation 'org.netbeans.external:AbsoluteLayout:RELEASE150'
    implementation 'org.swinglabs.swingx:swingx-all:1.6.5-1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2' 
}

tasks.named('test') {
    useJUnitPlatform() 
}

wrapper {
    gradleVersion = '8.5'
}


application {
    mainClass = 'mediamatrix.MediaMatrix'
    applicationName = 'MediaMatrix'
}

tasks.withType(JavaCompile) {
  options.compilerArgs << '-Xlint:all'
  options.deprecation = true
}

jar {
    manifest {
        attributes 'Implementation-Title': "MediaMatrix",
                'Main-Class': 'mediamatrix.MediaMatrix'
    }
}

runtime {
    modules = ['java.base', 'java.desktop', 'java.logging', 'java.net.http', 'java.prefs']
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/mediamatrix/icons/MediaMatrix.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Shuichi Kurabayashi']

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'MediaMatrix','--linux-shortcut']
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'MediaMatrix']
            installerType = 'dmg'
        }
    }
}


tasks.jpackage.doFirst {
    def currentOs = org.gradle.internal.os.OperatingSystem.current()
    def basePath = currentOs.windows ? project.name : currentOs.linux ? "$project.name/lib" : "${project.name}.app/Contents"
    copy {
        from('src/main/resources')
        into("$buildDir/jpackage/$basePath/app")
    }
}
